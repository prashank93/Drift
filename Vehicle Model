%Equilibrium Conditions
V = 8;      % Velocity
beta = 1;   % Slip angle

% Trajectory matrix
%C = [2 0.7 -1; 3 1 1; 5 1.1 -1];       
C = [20 2*pi -1];
%C = [5 pi -1; 3 4.5 1;3 pi -1];
trajec(C);

%Initialize system
eqbpts = zeros(size(C,1),3);
A = zeros(3,3,size(C,1));
B = zeros(3,2,size(C,1));
K = zeros(2,3,size(C,1));
dist = zeros(size(C,1),1);
Q = eye(3);     %For LQR
R = eye(2);     %For LQR
for i=1:size(C,1)
    eqbpts(i,:) = [V; beta; V/C(i,1)];
    if i ==1
        dist(i,1) = C(i,1)*C(i,2);
    else
        dist(i,1) = dist(i-1,1) + C(i,1)*C(i,2);
    end;
    [A(:,:,i),B(:,:,i)] = research(eqbpts(i,1:3)');
    K(:,:,i) = lqr(A(:,:,i),B(:,:,i),Q,R);
end;
%xeqb = [8.65; -0.5756; 0.5766];
%[A,B,ueqb] = research(xeqb);
%Q = [1000 0 0; 0 1000000 0; 0 0 10000000];
%Q = eye(3);
%R = eye(2);
%K = lqr(A,B,Q,R);
%options = odeset('RelTol',1e-4,'AbsTol',[1e-4 1e-4 1e-5]);
%u = [-0.2871; 0.0244]; 
%[T,veh] = ode45(@hi,[0 10],[8; 0.5; 0.6],B, A, B, xeqb,K);
%[T,veh] = ode45(@rest, [0 10],[8; 0.5; 0.6]-xeqb,1,K);

%Ignore imaginary parts of system
A = real(A);
B = real(B);
K = real(K);

%Initial Conditions
xinitial = [0; 0; 0; 0; 0; pi/2];
i = 1;

%Simulate system
[T,veh] = ode45(@hi2,[0 30],xinitial,1,A,B,K,eqbpts,dist,i,C);

%Plots
figure(1);
plot(veh(:,4),veh(:,5),'b-')
hold on;
figure(2);
plot(T,veh(:,2),'g-')
hold on;
figure(3);
plot(T,veh(:,3),'r-')
hold on;
